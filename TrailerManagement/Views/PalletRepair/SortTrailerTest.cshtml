@using TrailerManagement.Models;
@{
    ViewBag.Title = "Sort Trailer";
    var trailer = Model.Trailer;
    var vendor = Model.Vendor;
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
@if (vendor != null)
{
    <br>
    <table class="table table-responsive">
        <thead>
            <tr class="font-md" style="color:red">
                <th class="text-center">
                    <h2>For this vendor: @trailer.Vendor</h2>
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <h3 class="text-center">@vendor.SortTypeDescription</h3>
                </td>
            </tr>
        </tbody>
    </table>
}
<h2>Sort Sheet</h2>

<div class="well">
    <form method="post" action="CreateNewStack" class="form-horizontal" id="stackInput">
        <div class="form-top-buttons">
            <input type="button" value="Next Stack" class="btn btn-primary col-xs-3 nextStack" />
            <a href="/PalletRepair/SortList" value="Finish Later" class="btn btn-danger col-xs-3">Finish Later</a>
            <input type="button" value="All Done" class="btn btn-warning float-right col-xs-3 all-done" />
            <button type="button" id="hideKeyboard" class="btn btn-primary float-right col-xs-3 btn-green"><span class="fa fa-keyboard-o"></span>&nbsp;Hide Keyboard</button>
        </div>

        <input type="text" id="timeOnStack" class="form-control hidden" name="timeOnStack" />
        <input type="number" value="@trailer.SortGUID" class="form-control hidden" id="sortID" name="sortID" />

        <!-- Stack Number -->
        <div class="form-group">
            <div class="col-xs-6" style="display:block">
                <h3><strong>Stack Number:&nbsp;<span class="stackNumber"></span></strong></h3>
                <input type="number" id="stackNumber" name="stackNumber" class="form-control hidden" />
            </div>
            <div class="col-xs-6" style="margin-top:20px">
                <input type="button" class="btn btn-primary" id="uploadStackImage" value="Upload Image : Do this first" style="background-color:aqua; border-color:aqua">
            </div>
        </div>

        <!-- Stack Size -->
        <div class="form-group">
            <div class="col-xs-6">
                <strong>Stack Size:</strong>
                <input type="number" id="stackSize" name="stackSize" class="form-control"><br>
            </div>

            <div class="col-xs-6">
                <strong>People on Stack:&nbsp;</strong>
                <br>
                <div class="col-xs-5">
                    <input type="number" id="numberOfPeople" name="numberOfPeople" class="form-control" value="@trailer.NumberOfPeopleToStart">
                </div>
                <div class="col-xs-2">
                    <input type="button" value="+" class="btn" id="addPerson" style="background-color:darkmagenta; color:white" tabindex="-1">
                </div>
                <div class="col-xs-2">
                    <input type="button" value="-" class="btn" id="subtractPerson" style="background-color:darkmagenta; color:white" tabindex="-1">
                </div>
            </div>
        </div>

        <!-- Pallet Type 1 -->
        <div class="form-group">
            <div class="col-xs-7">
                <strong id="palletType1">Unrepaired 48x40 Cores:</strong>
                <input type="number" name="50-0140" class="form-control quantity" placeholder="(50-0140) - Quantity">
                <input type="text" name="50-0140" class="form-control" placeholder="Leave a note for Nancy?" tabindex="-1"><br>
            </div>
            <div class="col-xs-2">
                <button type="button" id="hideKeyboard" class="btn btn-primary btn-green" style="margin-top:30px" tabindex="-1"><h4><span class="fa fa-keyboard-o"></span></h4></button>
            </div>
        </div>

        <!-- Pallet Type 2 -->
        <div class="form-group">
            <div class="col-xs-7">
                <strong id="palletType2">Repaired 48x40 4/Way Flush (Grade A):</strong>
                <input type="number" name="50-0001" class="form-control quantity" placeholder="(50-0001) - Quantity">
                <input type="text" name="50-0001" class="form-control" placeholder="Leave a note for Nancy?" tabindex="-1"><br>
            </div>
            <div class="col-xs-2">
                <button type="button" id="hideKeyboard" class="btn btn-primary btn-green" style="margin-top:30px" tabindex="-1"><h4><span class="fa fa-keyboard-o"></span></h4></button>
            </div>
        </div>

        <!-- Pallet Type 3 -->
        <div class="form-group">
            <div class="col-xs-7">
                <strong id="palletType3">Repaired 48x40 4/Way Flush (Grade B):</strong>
                <input type="number" name="50-0004" class="form-control quantity" placeholder="(50-0004) - Quantity">
                <input type="text" name="50-0004" class="form-control" placeholder="Leave a note for Nancy?" tabindex="-1"><br>
            </div>
        </div>

        <!-- Extra Pallet Types -->
        <div id="extraPalletTypes">
            <!-- Pallet Type 4 -->
            <div class="form-group" id="palletType4">
                <div class="col-xs-7" id="palletType4TypeInput">
                    <strong>Extra Pallet Type 1:</strong>
                    @Html.DropDownList("palletTypes", null, "- - - Please Select - - -", htmlAttributes: new { @class = "form-control signin-form drop-down", @id = "extraPalletType1" })
                    <input type="number" id="extraPalletType1Quantity" class="form-control quantity extra-quantity" placeholder="Extra Pallet Type Quantity">
                    <input type="text" id="extraPalletType1Notes" class="form-control" placeholder="Leave a note for Nancy?" tabindex="-1">
                    <br />
                </div>
                <div class="col-xs-5" id="firstExtraPalletType">
                    <br />
                    <button type="button" class="btn btn-primary btn-green add-pallet-type" style="margin-top:30px" tabindex="-1"><h4>Add Another Type</h4></button>
                </div>
            </div>
        </div>

        <!-- Scrap -->
        <div class="form-group" id="palletTypeScrap">
            <div class="col-xs-7">
                <strong>Scrap:</strong>
                @Html.DropDownList("scrapTypes", null, htmlAttributes: new { @class = "form-control signin-form", @id = "scrapTypes" })
                <input type="number" id="scrapQuantity" class="form-control quantity" name="SCRAP-ONLY" placeholder="SCRAP-ONLY - Quantity">
                <input type="text" id="scrapNotes" class="form-control" name="SCRAP-ONLY" placeholder="Leave a note for Nancy?">
            </div>
            <div class="col-xs-5">
                <button type="button" class="btn btn-danger clear-scrap-inputs" style="margin-top:30px"><h4>Clear Scrap</h4></button>
            </div>
        </div>

        <!-- Custom Pallet Size -->
        <strong>Custom Pallet:</strong>
        <div class="form-group" id="customPalletType">
            <div class="col-xs-2">
                <strong>Length:</strong>
                <input type="number" id="customLength" name="customPallet" class="form-control">
            </div>
            <div class="col-xs-2">
                <strong>Width:</strong>
                <input type="number" id="customWidth" name="customPallet" class="form-control">
            </div>
            <div class="col-xs-2">
                <strong>Quantity:</strong>
                <input type="number" id="customPalletQuantity" name="customPallet" class="form-control quantity"><br>
            </div>
            <div class="col-xs-5">
                <strong>Note</strong>
                <input type="text" id="customPalletNote" name="customPallet" class="form-control" placeholder="Leave a note for Nancy?"><br>
            </div>
        </div>
    </form>

    <div class="form-bottom-buttons">
        <input type="button" value="Next Stack" name="nextStack" class="btn btn-primary col-xs-3 nextStack" />
        <a href="/PalletRepair/SortList" value="Finish Later" class="btn btn-danger col-xs-3" id="finishLater">Finish Later</a>
        <a class="btn btn-primary col-xs-3 btn-green" href="/PalletRepair/SortSummary?sortID=@trailer.SortGUID">Sort Summary</a>
        <input type="button" value="All Done" class="btn btn-warning float-right col-xs-3 all-done" />
        <br>
        <br>
    </div>
</div>

<div id="dropDownList" class="hidden">
    @Html.DropDownList("palletTypes", null, "- - - Please Select - - -", htmlAttributes: new { @class = "form-control signin-form", @id = "hiddenList" })
</div>

<!-- Error Modal -->
<div id="errorModal" class="modal fade modal-spacing" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h2 class="modal-title">Alert!</h2>
            </div>
            <div class="modal-body" id="confirmText">
                <p>Stack quantity does not match stack size, please check again.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-warning" data-dismiss="modal" data-toggle="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Picture Check Modal -->
<div id="pictureModal" class="modal fade modal-spacing" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h2 class="modal-title">Alert!</h2>
            </div>
            <div class="modal-body" id="confirmText">
                <p>Would you like to upload a picture for this stack?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-warning" id="no" data-dismiss="modal" data-toggle="modal">No</button>
                <button type="button" class="btn btn-primary" id="yes" data-dismiss="modal" data-toggle="modal">Yes</button>
            </div>
        </div>
    </div>
</div>
<!-- Stack Image Modal -->
<div id="stackImageModal" class="modal fade modal-spacing" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h2 class="modal-title">Stack Image</h2>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CreateStackImage", "PalletRepair", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="modal-body">
                            <div class="form-group hidden">
                                <input type="number" class="form-control" id="sortID" name="sortID" value="@trailer.SortGUID">
                            </div>
                            <div class="form-group hidden">
                                <input type="text" class="form-control" id="peopleOnStack" name="peopleOnStack">
                            </div>
                            <div class="form-group hidden">
                                <input type="number" class="form-control" id="stackNumber" name="stackNumber" value="@ViewBag.StackNumber">
                            </div>
                            <div class="form-group">
                                <input type="file" name="ImageFile" id="ImageFile" required>
                            </div>
                            <div class="form-group">
                                <strong>Image Note</strong>
                                <input type="text" class="form-control" id="notes" name="notes">
                            </div>
                            <br>
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                <input type="submit" value="Continue" class="btn btn-primary" />
                                <button type="button" class="btn btn-warning" id="close" data-dismiss="modal" data-toggle="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
    $(function ()
    {
        var timeOnLoad = new Date();
        var seconds;
        function calculateTimeOnPage()
        {
            var timeOnLeave = new Date();

            seconds = (timeOnLeave.getTime() - timeOnLoad.getTime()) / 1000;

            $('#timeOnStack').val(seconds)
        }

        var imageUploaded = '@ViewBag.ImageUploaded';
        imageUploaded = imageUploaded.toLowerCase();
        if (imageUploaded == "false")
        {
            //$('#pictureModal').modal();
        }
        else
        {
            $('#uploadStackImage').addClass('hidden');
        }

        var stackNumber = parseInt('@ViewBag.StackNumber');
        $('.stackNumber').html(stackNumber);
        $('#stackNumber').val(stackNumber);

        $('.all-done, .nextStack').on('click', function ()
        {
            var option = $(this).attr('class');
            if (option.indexOf("nextStack") > -1)
            {
                console.log(option);
            }
            $('#numberOfPeople').removeAttr('disabled', 'disabled');
            var stackSize = $('#stackSize').val();
            var inputQuantity = [];
            var total = 0;
            $('.quantity').each(function ()
            {
                if ($(this).val() != "")
                {
                    inputQuantity.push($(this).val());
                }
            });
            for (var x = 0; x < inputQuantity.length; x++)
            {
                total += parseInt(inputQuantity[x]);
            }

            var allFilled = true;
            var filledProgress = [];
            $('.extra-quantity').each(function ()
            {
                if ($(this).val() != "")
                {
                    if ($(this).parent().children('select').val() != "")
                    {
                        filledProgress.push(true);
                    }
                    else
                    {
                        $(this).parent().children('select').css('border-color', 'red');

                        filledProgress.push(false);
                    }
                }
            });
            for (var x = 0; x < filledProgress.length; x++)
            {
                if (filledProgress[x] == false)
                {
                    allFilled = false;
                    break;
                }
            }

            if ($('#stackSize').val() != "" && (stackSize == total))
            {
                $('#stackSize').css('border-color', 'lightgrey');
                $('.quantity').each(function ()
                {
                    $(this).css('border-color', 'lightgrey');
                })
                $('select').each(function ()
                {
                    $(this).attr('disabled', 'disabled');
                });
                calculateTimeOnPage();

                console.log(allFilled);
                if (allFilled)
                {
                    if (option.indexOf("nextStack") > -1)
                    {
                        $('#stackInput').append("<input type=\"text\" name=\"nextStack\">");
                    }
                    else if (option.indexOf("all-done") > -1)
                    {
                        $('#stackInput').append("<input type=\"text\" name=\"allDone\">");
                    }

                    $('#stackInput').submit();
                }
            }
            else
            {
                if ($('#stackSize').val() == "")
                {
                    $('#stackSize').css('border-color', 'red');
                }
                else
                {
                    $('.quantity').each(function ()
                    {
                        if ($(this).val() != "")
                        {
                            $(this).css('border-color', 'red');
                        }
                    })
                    $('#errorModal').modal();
                }
            }
        });

        $('body').on('click', '.clear-scrap-inputs', function ()
        {
            $('#scrapTypes').val($('#scrapTypes option:first').val());
            $('#scrapQuantity').val("").attr('placeholder','SCRAP-ONLY - Quantity');
            $('#scrapNotes').val("");
        });

        $('body').on('click','.add-pallet-type', function ()
        {
            if ($('#extraPalletType' + extraPalletTypes).val() == "" || $('#extraPalletType' + extraPalletTypes + 'Quantity').val() == "")
            {
                if ($('#extraPalletType' + extraPalletTypes).val() == "")
                {
                    $('#extraPalletType' + extraPalletTypes).css('border-color', 'red');
                }
                if ($('#extraPalletType' + extraPalletTypes + 'Quantity').val() == "")
                {
                    $('#extraPalletType' + extraPalletTypes + 'Quantity').css('border-color', 'red');
                }
            }
            else
            {
                $('#extraPalletType' + extraPalletTypes).css('border-color', 'lightgrey');
                $('#extraPalletType' + extraPalletTypes + 'Quantity').css('border-color', 'lightgrey');
                $(this).parent().remove();
                extraPalletTypes++;
                console.log(extraPalletTypes);
                $('#dropDownList').children('select').attr('id', "extraPalletType" + extraPalletTypes);
                $('#extraPalletTypes').append(
                    "<div class=\"form-group\" id=\"palletType" + (extraPalletTypes + 3) + "\">" +
                    "<div class=\"col-xs-7\" id=\"palletType" + (extraPalletTypes + 3) + "TypeInput\">" +
                    "<strong>Extra Pallet Type " + extraPalletTypes + ":</strong>" +
                    $('#dropDownList').html() +
                    "<input type=\"number\" id=\"extraPalletType" + extraPalletTypes + "Quantity\" class=\"form-control quantity extra-quantity\" placeholder=\"Extra Pallet Type Quantity\">" +
                    "<input type=\"text\" id=\"extraPalletType" + extraPalletTypes + "Notes\" class=\"form-control\" placeholder=\"Leave a note for Nancy?\" tabindex=\"-1\">" +
                    "<br />" +
                    "</div>" +
                    "<div class=\"col-xs-5\">" +
                    "<br />" +
                    "<button type=\"button\" class=\"btn btn-primary btn-green add-pallet-type\" style=\"margin-top:30px;margin-right:5px\" tabindex=\"-1\"><h4>Add Another Type</h4></button>" +
                    "<button type=\"button\" class=\"btn btn-primary btn-danger remove-pallet-type\" style=\"margin-top:30px\" tabindex=\"-1\"><h4>Remove Type</h4></button>" +
                    "</div>" +
                    "</div>"
                );
            }

        });

        $('body').on('click', '.remove-pallet-type', function ()
        {
            extraPalletTypes--;
            console.log(extraPalletTypes);
            $(this).parent().parent().remove();
            if (extraPalletTypes == 1)
            {
                $('#palletType4').append("<div class=\"col-xs-5\">" +
                    "<br />" +
                    "<button type=\"button\" class=\"btn btn-primary btn-green add-pallet-type\" style=\"margin-top:30px;margin-right:5px\" tabindex=\"-1\"><h4>Add Another Type</h4></button>" +
                    "</div>")
            }
            else
            {
                console.log($('#extraPalletTypes').children().last());
                $('#extraPalletTypes').children().last().append("<div class=\"col-xs-5\">" +
                    "<br />" +
                    "<button type=\"button\" class=\"btn btn-primary btn-green add-pallet-type\" style=\"margin-top:30px;margin-right:5px\" tabindex=\"-1\"><h4>Add Another Type</h4></button>" +
                    "<button type=\"button\" class=\"btn btn-primary btn-danger remove-pallet-type\" style=\"margin-top:30px\" tabindex=\"-1\"><h4>Remove Type</h4></button>" +
                    "</div>"
                );
            }

        });

        var extraPalletTypes = 1;
        $('body').on('change', 'select', function ()
        {
            var palletType = this.id;
            $('#' + palletType + 'Quantity').attr('placeholder', "(" + $('#' + palletType).val() + ") - Quantity");
            $('#' + palletType + 'Quantity').attr('name', $('#' + palletType).val());
            $('#' + palletType + 'Notes').attr('name', $('#' + palletType).val());
        });

        $('#scrapTypes').on('change', function ()
        {
            $('#scrapQuantity').attr('placeholder', $("#scrapTypes").val() + " - Quantity");
            $('#scrapQuantity').attr('name', $('#scrapTypes').val());
            $('#scrapNotes').attr('name', $('#scrapTypes').val());
        });

        $('#yes').on('click', function ()
        {
            $('body').css('overflow', 'hidden');
            $('body').css('overflow-x', 'hidden');
            $('#peopleOnStack').val($('#numberOfPeople').val());
            $('#stackImageModal').modal();
        });

        $('#close').on('click', function ()
        {
            $('body').css('overflow', 'scroll');
            $('body').css('overflow-x', 'hidden');
        });

        $('#numberOfPeople').attr('disabled', 'disabled');
        var numberOfPeople = $('#numberOfPeople').val();

        $('#addPerson').on('click', function ()
        {
            numberOfPeople++;
            $('#numberOfPeople').val(numberOfPeople);
        });
        $('#subtractPerson').on('click', function ()
        {
            numberOfPeople--;
            if (numberOfPeople <= 0)
            {
                numberOfPeople = 1;
                $('#numberOfPeople').val(1);
            }
            else
            {
                $('#numberOfPeople').val(numberOfPeople);
            }
        });

        if (stackNumber > 1)
        {
            $('#finish').removeClass('hidden');
        }

        $('#hideKeyboard').on('click', function ()
        {
            Android.hideKeyboard();
        });

        $('#uploadStackImage').on('click', function ()
        {
            $('body').css('overflow', 'hidden');
            $('body').css('overflow-x', 'hidden');
            $('#peopleOnStack').val($('#numberOfPeople').val());
            $('#stackImageModal').modal();
        });

        var numberOfPeople = '@ViewBag.NumberOfPeople';
        if (numberOfPeople != "")
        {
            $('#numberOfPeople').val(numberOfPeople);
        }

        $('#currentDate').html(getCurrentDate());

        function getCurrentDate()
        {
            var currentDate = new Date();
            var currentMonth = currentDate.getMonth() + 1;
            if (currentMonth.toString().length == 1)
            {
                currentMonth = "0" + currentMonth;
            }
            var currentDay = currentDate.getDate();
            if (currentDay.toString().length == 1)
            {
                currentDay = "0" + currentDay;
            }
            var currentYear = currentDate.getFullYear();

            currentDate = (currentYear + "-" + currentMonth + "-" + currentDay);
            console.log(currentDate);
            return currentDate;
        }
    });
    </script>
}
