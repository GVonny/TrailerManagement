@{
    ViewBag.Title = "Inventory Input";
}

<h2>Inventory Input</h2>

<div class="well">
    @using (Html.BeginForm("AddToRow", "Inventory", FormMethod.Post))
    {
    <div class="form-horizontal">
        <div class="form-group hidden">
            <label for="locationNumber">Location Number</label>
            <input type="number" id="locationNumber" name="locationNumber" class="form-control col-md-offset-1" value="@ViewBag.LocationNumber" />
            <label for="rowNumber">Row Number</label>
            <input type="number" id="rowNumber" name="rowNumber" class="form-control col-md-offset-1" value="@ViewBag.RowNumber" />
        </div>
        <div id="parts">
            <div id="part-1">
                <div class="form-group">
                    <label for="partNumbers" class="col-md-1">Part #</label>
                    @Html.DropDownList("partNumbers", null, "- - - Please Select - - -", htmlAttributes: new { @class = "form-control", @id = "partNumbers", @required = "required" })
                </div>
                <div id="part-1-stacks">
                    <div class="form-group" id="1-1">
                        <label for="part-1-stack-1" class="col-md-1">Stack 1</label>
                        <input type="number" placeholder="Stack 1 Quantity" id="part-1-stack-1" name="part-1-stack-1" class="form-control" style="width:150px;" />
                    </div>
                </div>
                <input type="button" class="btn btn-green add-stack" value="Add Stack" style="margin-left:80px;" />
                <input type="button" class="btn btn-danger hidden remove-stack" value="Remove Stack" id="part-1-remove" style="margin-right:5px;" />
                <br />
                <br />
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-10">
                <center>
                    <input type="button" class="btn btn-green" value="Add Part" id="addPalletType" style="margin-right:5px;" />
                    <input type="button" class="btn btn-danger" value="Remove Part" id="removePalletType" style="margin-right:5px;" />
                    <input type="submit" class="btn btn-primary float-left" />
                    <a href="/Inventory/ActiveLocationRows?locationID=@ViewBag.LocationNumber" class="btn btn-warning float-left" style="margin-left:5px;">Cancel</a>
                </center>
                
            </div>
        </div>
        <div class="col-xs-7">
            
        </div>
    </div>


    }

    <div id="hiddenHtml" style="display:none">
        @Html.DropDownList("partNumbers", null, "- - - Please Select - - -", htmlAttributes: new { @class = "form-control", @id = "partNumbers", @required = "required" })
    </div>
</div>

@section scripts
{
    <script>
        $(function ()
        {   
            var numberOfParts = 1;
            var totalStacks = 1;

            var stacksPerPart = [];
            var maxStackNumberPerPart = [];
            stacksPerPart.push(1);
            maxStackNumberPerPart.push(1);

            console.log("");
            console.log("number of parts: " + numberOfParts);
            console.log("total stacks: " + totalStacks);
            console.log("max stack per part: " + maxStackNumberPerPart);
            console.log("stacks per part: " + stacksPerPart);


            $('#addPalletType').on('click', function ()
            {
                numberOfParts++;
                totalStacks++;
                maxStackNumberPerPart.push(totalStacks);
                stacksPerPart.push(1);

                console.log("");
                console.log("number of parts: " + numberOfParts);
                console.log("total stacks: " + totalStacks);
                console.log("max stack per part: " + maxStackNumberPerPart);
                console.log("stacks per part: " + stacksPerPart);
                

                $('#parts').append(
                    "<div id=\"part-" + numberOfParts + "\">" +
                        "<div class=\"form-group\">" +
                            "<label for=\"partNumbers\" class=\"col-md-1\">Part #</label>" +
                            $('#hiddenHtml').html() +
                        "</div>" +
                        "<div id=\"part-" + numberOfParts + "-stacks\">" +
                            "<div class=\"form-group\" id=\"" + numberOfParts + "-" + totalStacks + "\">" +
                                "<label for=\"part-" + numberOfParts + "-stack-" + totalStacks + "\" class=\"col-md-1\">Stack " + totalStacks + "</label>" +
                                "<input type=\"number\" placeholder=\"Stack " + totalStacks + " Quantity\" id=\"part-" + numberOfParts + "-stack-" + totalStacks + "\" name=\"part-" + numberOfParts + "-stack-" + totalStacks + "\" class=\"form-control\" style=\"width:150px;\" />" +
                            "</div>" +
                        "</div>" +
                        "<input type=\"button\" class=\"btn btn-green add-stack\" value=\"Add Stack\"style=\"margin-left:80px;\" />" +
                        "<input type=\"button\" class=\"btn btn-danger hidden remove-stack\" value=\"Remove Stack\" id=\"part-" + numberOfParts + "-remove" + "\" style=\"margin-left:5px;\" />" + 
                        "<br />" + 
                        "<br />" + 
                    "</div>");
            });

            $('body').on('click', ".add-stack", function (e)
            {
                e.preventDefault();
                var part = this.parentElement.id;
                //console.log("parent id: " + part);

                var partNumberIndex = parseInt(part.substring(part.length - 1, part.length));
                //console.log("part number index: " + partNumberIndex);
                var partIndex = partNumberIndex - 1;
                //console.log("part list index: " + partIndex);
                
                
                if ($('#part-' + partNumberIndex + '-stack-' + maxStackNumberPerPart[partIndex]).val() != "")
                {
                    totalStacks++;
                    
                    var partStackCount = stacksPerPart[partIndex];
                    partStackCount++;
                    stacksPerPart[partIndex] = partStackCount;
                    maxStackNumberPerPart[partIndex] = totalStacks;

                    console.log("");
                    console.log("number of parts: " + numberOfParts);
                    console.log("total stacks: " + totalStacks);
                    console.log("max stack per part: " + maxStackNumberPerPart);
                    console.log("stacks per part: " + stacksPerPart);

                    $('#' + part + "-stacks").append(
                        "<div class=\"form-group\" id=\"" + partNumberIndex + "-" + totalStacks + "\">" +
                        "<label for=\"part-" + partNumberIndex + "-stack-" + totalStacks + "\" class=\"col-md-1\">Stack " + totalStacks + "</label>" +
                        "<input type =\"number\" placeholder=\"Stack " + totalStacks + " Quantity\" id=\"part-" + partNumberIndex + "-stack-" + totalStacks + "\" name=\"part-" + partNumberIndex + "-stack-" + totalStacks + "\" class=\"form-control\" style=\"width:150px;\"/>" +
                        "</div>"
                    );
                    if (partStackCount > 1)
                    {
                        $('#part-' + (partIndex + 1) + "-remove").removeClass('hidden');
                    }
                }
                else
                {
                    console.log("field is empty");
                }
            });
            

            $('body').on('click', ".remove-stack",function ()
            {
                totalStacks--;
                console.log("");
                var part = this.parentElement.id;
                console.log("parent id: " + part);

                var partNumberIndex = parseInt(part.substring(part.length - 1, part.length));
                console.log("part number index: " + partNumberIndex);
                var partIndex = partNumberIndex - 1;
                console.log("part list index: " + partIndex);

                var id = '#' + partNumberIndex + '-' + maxStackNumberPerPart[partIndex]
                
                //$('#' + partNumberIndex + '-' + maxStackNumberPerPart[partIndex]).remove();

                var stackCount = maxStackNumberPerPart[partIndex];
                stackCount--;
                //maxStackNumberPerPart[partIndex] = stackCount;

                for (var x = 0; x < numberOfParts; x++)
                {
                    if (x != partIndex)
                    {
                        while (stackCount == maxStackNumberPerPart[x])
                        {
                            stackCount--;
                        }
                    }
                }
                //maxStackNumberPerPart[partIndex] = stackCount;

                var partStackCount = stacksPerPart[partIndex];
                partStackCount--;
                
                if (partStackCount < 1)
                {
                    partStackCount = 1;
                }
                if (partStackCount == 1)
                {
                    $('#part-' + partNumberIndex + "-remove").addClass('hidden');
                }

                console.log("");
                console.log("number of parts: " + numberOfParts);
                console.log("total stacks: " + totalStacks);
                console.log("max stack per part: " + maxStackNumberPerPart);
                console.log("stacks per part: " + stacksPerPart);

                //stacksPerPart[partIndex] = partStackCount; 
                
                
                $('#' + part).parent().children('div').each(function ()
                {
                //    $('#' + this.id).children('div').each(function ()
                //    {
                //        var id = this.id;
                //        if (id != "")
                //        {
                //            $('#' + id).children('div').each(function ()
                //            {
                //                //console.log(this);
                //                id = this.id;
                //                var stackNumber = parseInt(id.substring(id.length - 1, id.length));
                                
                //                console.log(stackNumber);
                //                console.log(stackCount);
                //                if (stackNumber < stackCount);
                //                {
                //                    stackCount = stackNumber;
                //                    console.log(this)
                //                }
                //            });
                //        }
                //    })
                });
            });

            function Print(part)
            {
                $('#' + part).parent().children('div').each(function ()
                {
                    $('#' + this.id).children('div').each(function ()
                    {
                        var id = this.id;
                        if (id != "")
                        {
                            $('#' + id).children('div').each(function ()
                            {
                                id = this.id;
                                if (parseInt(id.substring(id.length - 1, id.length)) > stackCount);
                                {
                                    console.log("going to remove this div");
                                }
                            });
                        }
                    })
                });
                return;
            }
            $('#removePalletType').on('click', function ()
            {
                var count = $('#part-' + numberOfParts + '-stacks').children().length;
                totalStacks -= count;
                $('#part-' + numberOfParts).remove();
                //maxStackNumberPerPart.pop();
                //stacksPerPart.pop();

                console.log("");
                console.log("number of parts: " + numberOfParts);
                console.log("total stacks: " + totalStacks);
                console.log("max stack per part: " + maxStackNumberPerPart);
                console.log("stacks per part: " + stacksPerPart);

                //numberOfParts--;
            });
        });
    </script>    
}