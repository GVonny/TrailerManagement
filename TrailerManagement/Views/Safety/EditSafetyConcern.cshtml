@model TrailerManagement.Models.SafetyConcern

@using TrailerManagement.Models;

@{
    ViewBag.Title = "Edit Safety Concern";
    var safetyConcernID = Model.SafetyConcernGUID;
    var violations = (List<String>)ViewData["Violations"];
    var count = violations.Count;
    var violation1 = "";
    var violation2 = "";
    switch (count)
    {
        case 1:
            violation1 = violations[0].ToString();
            break;
        case 2:
            violation1 = violations[0].ToString();
            violation2 = violations[1].ToString();
            break;
    }
}

<h2>Edit Safety Concern</h2>

<div class="well">
    <table>
        <tr>
            <td class="col-xs-9 noBorder">
                <br />
                @using (Html.BeginForm("EditSafetyConcern", "Safety", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.SafetyConcernGUID)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Area, "Area:", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-3">
                                @Html.DropDownListFor(model => model.Area, ViewData["departments"] as List<SelectListItem>, "- - - Areas - - -", htmlAttributes: new { @class = "form-control signin-form" })
                                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.AreaNote, new { htmlAttributes = new { @class = "form-control", placeholder = "Sub Area" } })
                                @Html.ValidationMessageFor(model => model.AreaNote, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ConditionNoted, "Condition Noted:", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.ConditionNoted, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ConditionNoted, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-xs-3">
                                <strong class="float-right" style="margin-top:5px; margin-right:-10px;">Codes Violated:</strong>
                            </div>
                            <div class="col-xs-7">
                                @Html.DropDownList("typeSubType", null, "- - - Select Code 1 - - -", htmlAttributes: new { @class = "form-control signin-form", id = "code1" })
                            </div>
                            <br />
                            <br />
                            <div class="col-xs-offset-3 col-xs-7">
                                @Html.DropDownList("typeSubType2", null, "- - - Select Code 2 - - -", htmlAttributes: new { @class = "form-control signin-form", id = "code2" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CorrectiveActionMeasure, "Corrective Action:", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.CorrectiveActionMeasure, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CorrectiveActionMeasure, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-xs-3">
                                <strong class="float-right" style="margin-top:5px; margin-right:-10px;">Severity:</strong>
                            </div>
                            <div class="col-md-7">
                                @Html.DropDownList("severity", new List<SelectListItem>
                                {
                                    new SelectListItem { Text = "LOW", Value = "LOW" },
                                    new SelectListItem { Text = "MEDIUM", Value = "MEDIUM" },
                                    new SelectListItem { Text = "HIGH", Value = "HIGH"},
                                }, "- - - Select Severity - - -",
                                htmlAttributes: new { @class = "form-control signin-form", id = "severity" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-xs-3">
                                <strong class="float-right" style="margin-right:-10px;">Image Upload:</strong>
                            </div>
                            <div class="col-xs-2">
                                <input type="file" name="ImageFile" id="ImageFile">
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-7">
                                <input type="submit" value="Save" class="btn btn-primary float-left" style="margin-right:5px;"/>

                                @if (Model.Status == "OPEN")
                                {
                                    <a href="SafetyAudit" class="btn btn-warning float-left">Cancel</a>
                                    <input type="button" class="btn float-right btn-green" value="&nbsp;Fixed" id="markClosed">
                                    <a href="/Safety/RepeatSafetyConcern?safetyConcernID=@Model.SafetyConcernGUID" class="btn btn-danger float-right" id="notFixed" style="margin-right:5px">&nbsp;Not Fixed</a>
                                }
                                else
                                {
                                    <a href="ClosedSafetyAudit" class="btn btn-warning float-left">Cancel</a>
                                    <input type="button" class="btn btn-danger float-right" value="Re Open" id="reOpen" />
                                }
                            </div>
                        </div>
                    </div>
                }
            </td>
            <td class="noBorder">
                <div class="text-center"><strong>Current Image:</strong></div>
                <br />
                <div class="text-center">
                    <a href="/SafetyImages/@Model.ImagePath" download>
                        <img src="/SafetyImages/@Model.ImagePath" height="250" width="250" />
                    </a>
                </div>
                <br />
                <div>
                    @Html.LabelFor(model => model.ViolationCount, "Times Violated:", htmlAttributes: new { @class = "control-label text-right col-md-6" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.ViolationCount, new { htmlAttributes = new { @class = "form-control text-right", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
    </table>
</div>

<!-- Close Modal -->
<div id="closeModal" class="modal fade modal-spacing" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h2 class="modal-title">Alert!</h2>
            </div>
            <div class="modal-body" id="confirmText">
                Are you sure you want to close this safety concern?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-warning" id="close" data-dismiss="modal" data-toggle="modal">Cancel</button>
                <a href="CloseSafetyConcern?safetyConcernID=@safetyConcernID" class="btn btn-primary float-right">Close</a>
            </div>
        </div>
    </div>
</div>
<!-- Re Open Modal -->
<div id="reOpenModal" class="modal fade modal-spacing" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h2 class="modal-title">Alert!</h2>
            </div>
            <div class="modal-body" id="confirmText">
                Are you sure you want to re open this safety concern?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-warning" id="close" data-dismiss="modal" data-toggle="modal">Cancel</button>
                <a href="/Safety/ReOpenSafetyConcern?safetyConcernID=@Model.SafetyConcernGUID" class="btn btn-danger float-right" id="notFixed" style="margin-right:5px">Re Open</a>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        $(function ()
        {
            $('#markClosed').on('click', function ()
            {
                $('#closeModal').modal();
            });

            $('#reOpen').on('click', function ()
            {
                $('#reOpenModal').modal();
            });

            var length = parseInt('@violations.Count');
            console.log(length);

            if (@count == 1)
            {
                $('#code1').val('@violation1');
            }
            else if (@count == 2)
            {
                $('#code1').val('@violation1');
                $('#code2').val('@violation2');
            }
        });
    </script>
}